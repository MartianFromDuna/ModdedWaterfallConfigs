@PART[FNSmallAugmentedArcjet]:NEEDS[WarpPlugin]:AFTER[WarpPlugin]
{
//Clears all current effects
!EFFECTS {}
//Clears all engine light effects
!MODULE[EngineLightEffect] {}
//Clears any existing Waterfall effects
!MODULE[ModuleWaterfallFX] {}

//Adds new sounds, flameout things, etc. 
EFFECTS
{
	electric_qvp
	{
		AUDIO
		{
			channel = Ship
			clip = WarpPlugin/Sounds/sound_attila_looped
			volume = 0.0 0.0
			volume = 1.0 1.0
			pitch = 0.0 0.0
			pitch = 1.0 1.0
			loop = true
		}
	}
	electric_red
	{
		AUDIO
		{
			channel = Ship
			clip = WarpPlugin/Sounds/sound_attila_looped
			volume = 0.0 0.0
			volume = 1.0 1.0
			pitch = 0.0 0.0
			pitch = 1.0 1.0
			loop = true
		}
	}
	electric_argon
	{
		AUDIO
		{
			channel = Ship
			clip = WarpPlugin/Sounds/sound_attila_looped
			volume = 0.0 0.0
			volume = 1.0 1.0
			pitch = 0.0 0.0
			pitch = 1.0 1.0
			loop = true
		}
	}
	electric_xenon
	{
		AUDIO
		{
			channel = Ship
			clip = WarpPlugin/Sounds/sound_attila_looped
			volume = 0.0 0.0
			volume = 1.0 1.0
			pitch = 0.0 0.0
			pitch = 1.0 1.0
			loop = true
		}
	}
	electric_hydrogen
	{
		AUDIO
		{
			channel = Ship
			clip = WarpPlugin/Sounds/sound_attila_looped
			volume = 0.0 0.0
			volume = 1.0 1.0
			pitch = 0.0 0.0
			pitch = 1.0 1.0
			loop = true
		}
	}
	electric_ammonia
	{
		AUDIO
		{
			channel = Ship
			clip = WarpPlugin/Sounds/sound_attila_looped
			volume = 0.0 0.0
			volume = 1.0 1.0
			pitch = 0.0 0.0
			pitch = 1.0 1.0
			loop = true
		}
	}
	engage
	{
		AUDIO
		{
			channel = Ship
			clip = sound_vent_soft
			volume = 2
			pitch = 1
			loop = false
		}
	}
	disengage
	{
		AUDIO
		{
			channel = Ship
			clip = sound_vent_soft
			volume = 2
			pitch = 1
			loop = false
		}
	}
	flameout
	{
		AUDIO
		{
			channel = Ship
			clip = sound_explosion_low 
			volume = 2
			pitch = 1
		}
	}
}
//the actual waterfall cfg
MODULE
{
	name = ModuleWaterfallFX
	moduleID = ATTILAFX
//bunch of controllers or something
	ATMOSPHEREDENSITYCONTROLLER
	{
		name = Atmo
	}
	THROTTLECONTROLLER
	{
		name = Throttle
		engineID = 
		responseRateUp = 100
		responseRateDown = 100
	}
//links the effect to a template so the code isn't spagetti. 
	TEMPLATE
	{
		templateName = MWC_Plasma_2
		overrideParentTransform = thrustTransform
		scale = 0.5,0.5,0.6
		rotation = 0,0,0
		position = 0,0,-0.6
	}
}